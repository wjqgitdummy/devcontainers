name: App Dev Images

on:
  workflow_run:
    workflows: ["Base Images"]
    types:
        - completed

env:
  IMAGE_NAME_NOBLE: noble
  IMAGE_NAME_ANDROID: android
  IMAGE_NAME_AVD: avd
  IMAGE_NAME_FLUTTER: flutter

jobs:
  build_and_push:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write
      attestations: write
      id-token: write # Required for OIDC token generation for attestation
    
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3

      - name: Set up Buildx
        uses: docker/setup-buildx-action@v3
        with:
          driver-opts: |
            image=moby/buildkit:v0.21.1

      - name: Log in to the Container Registry
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
      
      - name: Login to Secondary Registry (Custom)
        uses: docker/login-action@v3
        with:
          registry: ${{ vars.DOCKER_REGISTRY }}
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}
    
      - name: Extract metadata (tags, labels) for Docker
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: |
            ghcr.io/${{ github.actor }}/${{ env.IMAGE_NAME_ANDROID }}
            ${{ vars.DOCKER_REGISTRY }}/${{ env.IMAGE_NAME_ANDROID }}
          tags: |
            type=sha
            type=raw,value=latest
          flavor: |
            latest=auto

      - name: Build Android Image
        uses: docker/build-push-action@v6
        id: build_push
        with:
          context: ./app
          file: ./app/android.dockerfile
          build-args: |
            BASE_IMG=ghcr.io/${{ github.actor }}/${{ env.IMAGE_NAME_NOBLE }}
          platforms: linux/amd64,linux/arm64
          push: ${{ github.ref == 'refs/heads/release' }}
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          cache-from: type=gha
          cache-to: type=gha,mode=max

      - name: Generate artifact attestation
        if: github.ref == 'refs/heads/release'
        uses: actions/attest-build-provenance@v2
        with:
          subject-name: ghcr.io/${{ github.actor }}/${{ env.IMAGE_NAME_ANDROID }}
          subject-digest: ${{ steps.build_push.outputs.digest }}
          push-to-registry: true